---
- name: Deploying AWS Cloud Resources through Terraform
  hosts: localhost
  become: false
  vars_files:
    - var_dwc_vpc.yml
  tasks:
    - name: Basic deployment of VPC and components # using Terraform Module
      community.general.terraform:
        project_path: '{{ project_dir }}'
        force_init: true
        provider_upgrade: true
        state: present
        no_color: false
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
        AWS_DEFAULT_REGION: "{{ aws_region }}"
      register: dwc_vpc

    - name: Display VPC information after creation
      ansible.builtin.debug:
        msg:
          - 'VpcId:  {{ dwc_vpc.outputs.vpc_id.value }}'
          - 'VpcName: {{  dwc_vpc.outputs.vpc_name.value }}'
          - 'PublicSubnet01CIDR: {{ dwc_vpc.outputs.public_subnet01_cidr_block.value }}'
          - 'PrivateSubnet01CIDR: {{ dwc_vpc.outputs.private_subnet01_cidr_block.value }}'
          - 'PublicSubnet02CIDR: {{ dwc_vpc.outputs.public_subnet02_cidr_block.value }}'
          - 'PrivateRouteTableID: {{ dwc_vpc.outputs.private_route_table_id.value }}'


    - name: Write configuration info to remote host
      ansible.builtin.copy:
        dest: "{{ comp_acc_vpc }}"
        force: true
        content: |
         DwcVpcID                : '{{ dwc_vpc.outputs.vpc_id.value }}'
         DwcVpcName              : '{{  dwc_vpc.outputs.vpc_name.value }}'
         DwcPublicSubnet01CIDR   : '{{ dwc_vpc.outputs.public_subnet01_cidr_block.value }}'
         DwcPrivateSubnet01CIDR  : '{{ dwc_vpc.outputs.private_subnet01_cidr_block.value }}'
         DwcPublicSubnet02CIDR   : '{{ dwc_vpc.outputs.public_subnet02_cidr_block.value }}'
         DwcPrivateRouteTable01ID: '{{ dwc_vpc.outputs.private_route_table_id.value }}'
      delegate_to: "{{ item }}"
      loop:
        - host1
        - host2
